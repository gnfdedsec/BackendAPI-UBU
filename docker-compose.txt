version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: my-postgres
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: 10102024
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: my-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - app-network

  backend:
    image: node:14
    container_name: backendapi-ubu
    user: node
    working_dir: /home/node/app
    volumes:
      - ./BackendAPI-UBU:/home/node/app
    command: >
      sh -c "npm install &&
             node server-normal.js"
    environment:
      - NODE_ENV=production
      - PORT=${PORT}
      - DB_USER=${DB_USER}
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    image: node:18-alpine  # เปลี่ยนจาก node:14 เป็น node:18-alpine
    container_name: my-portfolio-nuxt
    working_dir: /app
    volumes:
      - ./MY-PORTFOLIO-NUXT:/app
      - /app/node_modules  # เพิ่มบรรทัดนี้
    command: >
      sh -c "npm install -g pnpm &&
             pnpm install &&
             pnpm run dev"
    environment:
      - HOST=0.0.0.0
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  pnpm-store:  # เพิ่ม volume นี้


  //** อย่าลืมไฟล์ .env